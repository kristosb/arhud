{"version":3,"sources":["Components/Viewer/threejs/GeneralLights.js","Components/Viewer/threejs/StereoCamera.js","Components/Viewer/threejs/StereoEffect.js","Components/Viewer/threejs/HudControls.js","Components/Viewer/threejs/hudDataSimulation.js","Components/Viewer/threejs/Hud.js","Components/Viewer/threejs/SceneManager.js","Components/Viewer/threejs/threeEntryPoint.js","Components/Viewer/Viewer.js","App.js","reportWebVitals.js","index.js"],"names":["scene","light","THREE","position","set","add","update","time","_eyeRight","Matrix4","_eyeLeft","offsetView","StereoCamera","this","type","aspect","eyeSep","offset","cameraL","PerspectiveCamera","layers","enable","matrixAutoUpdate","cameraR","_cache","focus","fov","near","far","zoom","camera","cache","xmin","xmax","projectionMatrix","clone","eyeSepHalf","eyeSepOnProjection","ymax","Math","tan","MathUtils","DEG2RAD","elements","identity","setPosition","copy","multiply","matrixWorld","StereoEffect","renderer","_stereo","size","Vector2","getSize","setEyeSeparation","setOffset","setSize","width","height","render","updateMatrixWorld","parent","autoClear","clear","setScissorTest","setScissor","setViewport","hudControl","bm","x","y","_x","_y","lineWidth","globalLineWidth","localLineWidth","hudSimpleText","fontSize","txt","font","textAlign","fillText","hudBorder","strokeRect","crosshair","floor","strokeWidth","beginPath","moveTo","lineTo","closePath","stroke","horizon","tilt","angle","save","translate","rotate","PI","restore","range","start","end","inc","Array","fill","map","_","idx","compass","tickHeight","tickSpace","scale","_range","rangeScale","tiltFloor","tiltRemd","tiltRemdHalf","scaleVals","limit","space","spaceHalf","forEach","val","toString","middle","pitchLader","rot","middleOffset","rotation","sign","setLineDash","leading_zeros","dt","getTimeString","d","Date","getHours","getMinutes","getSeconds","easing","mx","mn","min","max","value","_inc","_min","_max","_value","bouncer","vx","vy","sineEasing","yaw","sin","linearEasing360","magnetInc","airplaneTelemetry","rollModel","yawModel","pitchModel","_roll","nextPoint","_pitch","_yaw","roll","pitch","hud","canvas","now","planeSize","screenDimensions","window","innerHeight","console","log","then","interval","style","hudCanvas","document","createElement","hudBitmap","getContext","fillStyle","strokeStyle","globalAlpha","hudElements","info","HUD","border","Object","values","draw","hudTexture","needsUpdate","material","transparent","planeGeometry","plane","name","movePoint","SIM","flightData","clearRect","text","next","getCanvas","clock","mousePosition","background","buildScene","antialias","alpha","DPR","devicePixelRatio","setPixelRatio","gammaInput","gammaOutput","buildRender","aspectRatio","buildCamera","sceneSubjects","GeneralLights","createSceneSubjects","Hud","effect","viewer","tanFOV","windowHeight","elapsedTime","getElapsedTime","i","length","addEventListener","ev","which","onWindowResize","atan","updateProjectionMatrix","onMouseMove","animate","setAnimationLoop","getScene","Viewer","container","appendChild","createCanvas","sceneManager","SceneManager","resizeCanvas","offsetWidth","offsetHeight","round","onresize","threeEntryPoint","threeRootElement","className","ref","element","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6cb66353.chunk.js","sourcesContent":["import * as THREE from 'three'\n\n\nexport default function scene(scene) {    \n\n    /*const lightIn = new THREE.PointLight(\"#4CAF50\", 30);\n    const lightOut = new THREE.PointLight(\"#2196F3\", 10);\n    lightOut.position.set(40,20,40);*/\n    const color = 0xFFFFFF;\n    const intensity = 1;\n    const light = new THREE.DirectionalLight(color, intensity);\n    //light.position.set(-1, 2, 4);\n    light.position.set(-1, 2, 4);\n    scene.add(light);\n    //scene.add(lightIn);\n    //scene.add(lightOut);\n    \n    //const rad = 80;\n\n    function update(time) {\n        //const x = rad * Math.sin(time*0.2)\n        //lightOut.position.x = x;\n    }\n\n    return {\n        update\n    }\n}","import { Matrix4 } from 'three/src/math/Matrix4.js';\nimport { MathUtils } from 'three/src/math/MathUtils.js';\nimport { PerspectiveCamera } from 'three/src/cameras/PerspectiveCamera.js';\n\nconst _eyeRight = new Matrix4();\nconst _eyeLeft = new Matrix4();\nconst offsetView = new Matrix4();\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n        this.offset = 0;\n        \n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null,\n            offset: null\n\t\t};\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep || cache.offset !== this.offset;;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n            cache.offset = this.offset;\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n            var xminFixed = - ymax  + eyeSepOnProjection;\n\t\t\tvar xmaxFixed = ymax + eyeSepOnProjection;\n\n            offsetView.identity();\n            offsetView.setPosition(this._cache.offset,0,0);\n            offsetView.copy(offsetView.multiply(projectionMatrix));\n\n            this.cameraL.projectionMatrix.copy( offsetView );\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n            xminFixed = - ymax  + eyeSepOnProjection;\n\t\t\txmaxFixed = ymax + eyeSepOnProjection;\n\n            offsetView.identity();\n            offsetView.setPosition(-this._cache.offset,0,0);\n            offsetView.copy(offsetView.multiply(projectionMatrix));\n\n\t\t\tthis.cameraR.projectionMatrix.copy( offsetView );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n        \n\t}\n\n}\n\nexport { StereoCamera };","/*import {\n\tStereoCamera,\n\tVector2\n} from 'three/build/three.module.js';*/\nimport {\n\tVector2\n} from 'three/build/three.module.js';\n\nimport {StereoCamera} from \"./StereoCamera.js\"\n\nvar StereoEffect = function ( renderer ) {\n\n\tvar _stereo = new StereoCamera();\n\t_stereo.aspect = 0.5;\n\tvar size = new Vector2();\n\n    renderer.getSize( size );\n\n\tthis.setEyeSeparation = function ( eyeSep ) {\n\n\t\t_stereo.eyeSep = eyeSep;\n\n\t};\n    this.setOffset = function ( offset ) {\n\n\t\t_stereo.offset = offset;\n\n\t};\n\n\tthis.setSize = function ( width, height ) {\n\n\t\trenderer.setSize( width, height );\n\n\t};\n\n\tthis.render = function ( scene, camera ) {\n\t\tscene.updateMatrixWorld();\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n        \n\t\t_stereo.update( camera );\n        \n\t\trenderer.getSize( size );\n        \n\t\tif ( renderer.autoClear ) renderer.clear();\n\t\trenderer.setScissorTest( true );\n\n\t\trenderer.setScissor( 0, 0, size.width / 2, size.height );\n\t\trenderer.setViewport( 0, 0, (size.width / 2), size.height );\n\t\trenderer.render( scene, _stereo.cameraL );\n\n\t\trenderer.setScissor( (size.width / 2), 0, size.width / 2, size.height );\n\t\trenderer.setViewport( (size.width / 2), 0, (size.width / 2), size.height );\n\t\trenderer.render( scene, _stereo.cameraR );\n\n\t\trenderer.setScissorTest( false );\n        \n\t};\n\n};\n\nexport { StereoEffect };"," class hudControl {\n     constructor(bm, x, y){\n        this.bm = bm;\n        this._x = x;\n        this._y = y;\n        this.lineWidth = this.bm.lineWidth;\n        this.globalLineWidth = this.bm.lineWidth;\n     }\n     set lineWidth(lineWidth){\n        this.localLineWidth = lineWidth;\n    }\n    set x(x){\n        this._x = x;\n    }\n    get x(){\n        return this._x;\n    }\n    set y(y){\n        this._y = y;\n    }\n    get y(){\n        return this._y;\n    }\n    changeLocalLineWidth(){\n        this.globalLineWidth = this.bm.lineWidth;\n        this.bm.lineWidth = this.localLineWidth;\n    }\n    resetGlobalLineWidth(){\n        this.bm.lineWidth = this.globalLineWidth;\n    }\n     draw(){\n\n     }\n }\n\n\nexport class hudSimpleText extends hudControl{\n    constructor(bm, x, y, fontSize) {\n        super(bm,x,y);\n        this.txt = \"hello...\"\n        this.fontSize = fontSize;\n    }\n    set text(txt){\n        this.txt = txt;\n    }\n    draw(){\n        this.bm.font = `${this.fontSize}px monaco`;\n        this.bm.textAlign = 'start';\n        this.bm.fillText(this.txt, this.x, this.y);\n    }\n  }\n\nexport class hudBorder extends hudControl{\n    constructor(bm, width, height) {\n        super(bm,0,0);\n        this.width = width;\n        this.height = height;\n    }  \n    draw(){\n        super.changeLocalLineWidth();\n        this.bm.strokeRect(0,0,this.width, this.height);\n        super.resetGlobalLineWidth();\n    }\n\n  }\n \nexport class crosshair extends hudControl{\n    constructor(bm, width, height) {\n        super(bm,width / 2,height / 2);\n        this.width = width;\n        this.height = height;\n\n    }\n\n    draw(){\n        // remove aliasing\n        this.x = Math.floor(this.x) + 0.5;\n        this.y = Math.floor(this.y) + 0.5;\n        super.changeLocalLineWidth();\n        this.bm.strokeWidth = 1;\n        this.bm.beginPath();\n        this.bm.moveTo(this.x, this.y - 10);\n        this.bm.lineTo(this.x, this.y + 10);\n        this.bm.moveTo(this.x - 10,  this.y);\n        this.bm.lineTo(this.x + 10,  this.y);\n        this.bm.closePath();\n        this.bm.stroke();\n        super.resetGlobalLineWidth();\n    }\n  }\n\n  export class horizon extends hudControl{\n    constructor(bm, width, height) {\n        super(bm,width / 2,height / 2);\n        this.width = width;\n        this.height = height;\n        this.tilt = 0;\n    }\n    set angle(angle){\n        this.tilt = angle;\n    }\n    draw(){\n        // remove aliasing\n        this.x = Math.floor(this.x) + 0.5;\n        this.y = Math.floor(this.y) + 0.5;\n        this.bm.save();\n        //this.bm.clearRect(0,0,this.width,this.height);\n        this.bm.translate(this.width/2, this.height/2)\n        this.bm.rotate((Math.PI / 180) * this.tilt); // rotate\n        this.bm.translate(-this.width/2, -this.height/2)\n        super.changeLocalLineWidth();\n        this.bm.strokeWidth = 1;\n        this.bm.beginPath();\n        this.bm.moveTo(this.x-20, this.y);\n        this.bm.lineTo(this.x-10, this.y);\n        this.bm.moveTo(this.x-10, this.y);\n        this.bm.lineTo(this.x, this.y -10 );\n        this.bm.moveTo(this.x, this.y -10 );\n        this.bm.lineTo(this.x+10, this.y);\n        this.bm.moveTo(this.x+10,  this.y);\n        this.bm.lineTo(this.x+20,  this.y);\n        this.bm.closePath();\n        this.bm.stroke();\n        super.resetGlobalLineWidth();\n        \n        this.bm.restore();\n    }\n  }\n\n  function range(start, end, inc) {\n    //console.log(start,end);\n    return Array(end/inc - (start/inc) + 1).fill().map((_, idx) => start+ idx*inc);\n  }\n  function limit(x){\n    if(x<0) x = x+ 360;\n    if(x>359) x = x -360;\n    return x;\n  }\n  function rangeClip360(rangeArray){\n    return rangeArray.map(x=>limit(x));\n  }\n  export class compass extends hudControl{\n    constructor(bm, width, height) {\n        super(bm,width / 4,height / 7);\n        this.width = width;\n        this.height = height;\n        this.tilt = 0;\n        this.tickHeight = 15;\n        this.tickSpace = 40;\n        this.scale = 10;\n        //this.scaleVals = range(10/this.scale,50/this.scale,this.scale);\n        //console.log(this.scaleVals);\n        this.x = Math.floor(this.x) + 0.5;\n        this.y = Math.floor(this.y) + 0.5;\n        this._range = 4;\n        \n    }\n    set angle(angle){\n        this.tilt = angle;\n    }\n    set range(range){\n        this._range = range;\n    }\n    set rangeScale(rangeScale){\n        this.scale = rangeScale;\n    }\n    draw(){\n        var tiltFloor = Math.floor(this.tilt);\n        var tiltRemd = Math.floor(this.tilt * 10/this.scale) % 10;\n        var tiltRemdHalf = Math.floor((this.tilt/this.scale+0.5) * 10) % 10;\n        this.scaleVals = range(\n            Math.floor(this.tilt/this.scale)*this.scale-Math.floor(this.scale*this._range/2),\n            Math.floor(this.tilt/this.scale)*this.scale+ Math.floor(this.scale*this._range/2),\n            this.scale);\n        this.scaleVals = rangeClip360(this.scaleVals);\n        this.tilt = tiltFloor + tiltRemd/10;\n\n        super.changeLocalLineWidth();\n        this.bm.beginPath();\n        \n        var space = this.x-tiltRemd*this.tickSpace/10;\n        var spaceHalf = this.x-tiltRemdHalf*this.tickSpace/10;\n        this.scaleVals.forEach((val,idx)=>{\n            this.bm.font = `${12}px monaco`;\n            this.bm.textAlign = 'start';\n            this.bm.fillText(val.toString(), space-5, this.y-this.tickHeight-2);\n            this.bm.moveTo(space, this.y);\n            this.bm.lineTo(space, this.y-this.tickHeight); \n            this.bm.moveTo(spaceHalf, this.y);\n            this.bm.lineTo(spaceHalf, this.y-this.tickHeight/2); \n            space += this.tickSpace;\n            spaceHalf += this.tickSpace;\n        });\n        var middle = this.x + this.tickSpace*(this._range/2);\n        this.bm.moveTo(middle, this.y+15);\n        this.bm.lineTo(middle, this.y+15 -this.tickHeight); \n        this.bm.fillText(tiltFloor.toString(), middle+4, this.y+15);\n        this.bm.closePath();\n        this.bm.stroke();\n        super.resetGlobalLineWidth(); \n    }\n  }\nexport class pitchLader extends hudControl {\n    constructor(bm, width, height){\n        super(bm,0,0);\n        this.width = width;\n        this.height = height;\n        this.middle = width/2;\n        this.tilt = 0;\n        this.rot = 0;\n        this.tickHeight = 100;\n        this.tickSpace = 40;\n        this.scale = 10;\n        //this.x = Math.floor(this.x) + 0.5;\n        //this.y = Math.floor(this.y) + 0.5;\n        this._range = 4;\n        this.middleOffset = height -(height - this.tickSpace*this._range )/2;// +this.tickSpace;\n    }\n    set angle(angle){\n        this.tilt = angle;\n    }\n    set rotation(rotation){\n        this.rot = rotation;\n    }\n    set range(range){\n        this._range = range;\n    }\n    set rangeScale(rangeScale){\n        this.scale = rangeScale;\n    }\n    draw(){\n        this.bm.save();\n        this.bm.translate(this.width/2, this.height/2);\n        this.bm.rotate((Math.PI / 180) * this.rot); // rotate\n        this.bm.translate(-this.width/2, -this.height/2);\n\n        var tiltFloor = Math.floor(this.tilt);\n        var tiltRemd = Math.floor(this.tilt * 10/this.scale) % 10;\n        this.scaleVals = range(\n            Math.floor(this.tilt/this.scale)*this.scale - Math.floor(this.scale*this._range/2),\n            Math.floor(this.tilt/this.scale)*this.scale + Math.floor(this.scale*this._range/2),\n            this.scale);\n        this.tilt = tiltFloor + tiltRemd/10;\n        \n        var space = 0;\n        if (tiltRemd >=0) \n            space = this.middleOffset +tiltRemd*this.tickSpace/10;\n        else \n            space = this.middleOffset + (10*this.tickSpace/10 +tiltRemd*this.tickSpace/10);\n\n        super.changeLocalLineWidth();\n\n        this.scaleVals.forEach((val,idx)=>{\n            this.bm.beginPath();\n            this.bm.font = `${12}px monaco`;\n            this.bm.textAlign = 'start';\n            var sign = 1;\n            if (val<0) {\n                this.bm.setLineDash([3, 2]);\n                sign = -1;\n            }\n            if (val != 0){\n                this.bm.moveTo(this.middle - this.tickHeight/2, space);\n                this.bm.lineTo(this.middle - this.tickHeight*0.3, space); \n                this.bm.moveTo(this.middle + this.tickHeight*0.3, space);\n                this.bm.lineTo(this.middle + this.tickHeight/2, space); \n                this.bm.moveTo(this.middle - this.tickHeight/2, space);\n                this.bm.lineTo(this.middle - this.tickHeight/2, space+10*sign); \n                this.bm.moveTo(this.middle + this.tickHeight/2, space);\n                this.bm.lineTo(this.middle + this.tickHeight/2, space+10*sign); \n                this.bm.fillText(val.toString(), this.middle - this.tickHeight/2 -25, space+8*sign);\n            }else{\n                this.bm.moveTo(this.middle - this.tickHeight*0.8, space);\n                this.bm.lineTo(this.middle - this.tickHeight*0.3, space); \n                this.bm.moveTo(this.middle + this.tickHeight*0.3, space);\n                this.bm.lineTo(this.middle + this.tickHeight*0.8, space); \n            }\n            space -= this.tickSpace;\n            this.bm.closePath();\n            this.bm.stroke();\n            this.bm.setLineDash([]);\n        });\n        \n        super.resetGlobalLineWidth(); \n        this.bm.restore();\n    }\n}\n\n\n\nexport default {hudSimpleText, hudBorder, crosshair, horizon, compass}\n","\n// get the time as string with leading zeros\nfunction leading_zeros(dt) \n{ \n    return (dt < 10 ? '0' : '') + dt;\n}\nexport function getTimeString(){\n    var d = new Date();\n    return `TIME:${leading_zeros(d.getHours())}:${leading_zeros(d.getMinutes())}:${leading_zeros(d.getSeconds())}`;\n} \n\nclass easing{\n    constructor(mx,mn,inc, val){\n    this.min = mn;\n    this.max = mx;\n    this.inc = inc;\n    this.value = val;\n    }\n    set inc(inc){\n        this._inc = inc;\n    }\n    set min(min){\n        this._min = min;\n    }\n    set max(max){\n        this._max = max;\n    }\n    set value(value){\n        this._value = value;\n    }\n    get value(){\n        return this._value;\n    }\n    get inc(){\n        return this._inc;\n    }\n    get min(){\n        return this._min;\n    }\n    get max(){\n        return this._max;\n    }\n}\n\n// bounce the point within the screen limit\nexport class bouncer{\n    constructor(width, height){\n        this.width = width;\n        this.height = height;\n        this.x =0;\n        this.y = 0;\n        this.vx = 5;\n        this.vy = 2;\n    }\n    \n    nextPoint(){\n        this.x = this.x  +this.vx;\n        this.y = this.y  +this.vy;\n        if (this.y+ this.vy > this.height || this.y + this.vy < 0) {\n            this.vy = -this.vy;\n        }\n        if (this.x + this.vx > this.width/2 || this.x+ this.vx < 0) {\n            this.vx = -this.vx;\n        }\n    }\n\n}\n\n// simulate +/- movement with sine easing\nexport class sineEasing extends easing{\n    constructor(){\n        super(1,-1,0.02,0);\n        this.yaw = 0.02;\n    }\n    nextPoint(){\n        if (this.value>this._max)this.yaw = -this.inc;\n        if (this.value<this._min)this.yaw = this.inc;\n        this.value += this.yaw;\n        return Math.sin(Math.PI*this.value/2)*90;\n    }\n}\n\nexport class linearEasing360 extends easing{\n    constructor(inc=0.1){\n        super(10,-10,inc,0);\n        this.magnetInc = this._inc;\n    }\n    nextPoint(){\n        if (this.value > this._max) this.magnetInc = -this._inc;\n        if (this.value <=  this._min ) this.magnetInc = this._inc;\n        this.value += this.magnetInc;\n        return this.value;\n    }\n}\n\nexport class airplaneTelemetry{\n    constructor(){\n        this.rollModel = new sineEasing();\n        this.rollModel.max = 0.4;\n        this.rollModel.min = -0.4;\n        this.yawModel = new linearEasing360(1);\n        this.yawModel.max = 30;\n        this.yawModel.min = 0;\n        this.pitchModel = new linearEasing360(0.7);\n        this.pitchModel.max = 25;\n        this.pitchModel.min = -25;\n        this._roll = this.rollModel.nextPoint();\n        this._pitch = this.pitchModel.nextPoint();\n        this._yaw = this.yawModel.nextPoint();\n    }\n    get roll(){\n        return this._roll;\n    }\n    get pitch(){\n        return this._pitch;\n    }\n    get yaw(){\n        return this._yaw;\n    }\n    next(){\n        if (this.roll >= 40 || this.roll <= -40){\n            this._pitch = this.pitchModel.nextPoint();\n            if (this.pitch >15 || this.pitch <-15 ) this._roll = this.rollModel.nextPoint();\n        }else this._roll = this.rollModel.nextPoint();\n        this._yaw = this.yawModel.nextPoint();\n        //console.log(this._yaw);\n    }\n}\n\nexport default {getTimeString, bouncer, sineEasing, linearEasing360}","import * as THREE from 'three'\nimport * as HUD from './HudControls';\nimport * as SIM from './hudDataSimulation';\nexport default function hud(scene,canvas,planeSize = 0.5){\n    \n    const screenDimensions = {\n        width: window.innerHeight*2,//canvas.width,\n        height: window.innerHeight //canvas.height\n    }\n    console.log(screenDimensions);\n\n    var elapsed, now;\n    var then= 0;\n    var interval=0.05;\n    console.log('win inner height'+window.innerHeight);\n    var style = `rgba(\n        ${0xa3},\n        ${0xff},\n        ${0x00},\n        ${0xFF}`;\n    var hudCanvas = document.createElement('canvas');\n    hudCanvas.width = screenDimensions.width/2; //keep it square assuming default 300x150\n    hudCanvas.height = screenDimensions.height;\n    var hudBitmap = hudCanvas.getContext('2d');\n    //flipHoriz(hudBitmap);    \n    hudBitmap.fillStyle = style;\n    hudBitmap.strokeStyle = style;\n    hudBitmap.globalAlpha = 0.75;\n    var hudElements = {\n        info: new HUD.hudSimpleText(hudBitmap, hudCanvas.width/2 -30, hudCanvas.height - 5,16),\n        border: new HUD.hudBorder(hudBitmap,hudCanvas.width,hudCanvas.height),\n        crosshair: new HUD.crosshair(hudBitmap,hudCanvas.width,hudCanvas.height),\n        horizon: new HUD.horizon(hudBitmap,hudCanvas.width,hudCanvas.height),\n        compass: new HUD.compass(hudBitmap,hudCanvas.width,hudCanvas.height),\n        pitchLader: new HUD.pitchLader(hudBitmap,hudCanvas.width,hudCanvas.height)\n    };\n    //hudElements.border.lineWidth = 5;\n    hudElements.crosshair.lineWidth = 2;\n    //hudElements.compass.rangeScale = 1;\n    Object.values(hudElements).forEach(val => {val.draw()});\n \n\n    var hudTexture = new THREE.Texture(hudCanvas);\n    //hudTexture.name = \"hudCanvas\";\n    hudTexture.needsUpdate = true;\n    var material = new THREE.MeshBasicMaterial({map: hudTexture} );//{color: 0xffff00, side: THREE.DoubleSide} );\n    material.transparent = true;\n    var planeGeometry = new THREE.PlaneGeometry( planeSize, planeSize );\n    var plane = new THREE.Mesh( planeGeometry, material );\n    plane.name = \"hudPlane\";\n    plane.position.set(0,0,-0.15);\n    scene.add( plane );\n\n\n    var movePoint = new SIM.bouncer(screenDimensions.width,screenDimensions.height);\n    var flightData = new SIM.airplaneTelemetry();\n\n    function draw() {\n        hudBitmap.clearRect(0,0,screenDimensions.width/2,screenDimensions.height);\n        \n        // display time\n        hudElements.info.text = SIM.getTimeString();\n\n        // simulate crosshair movement and display\n        movePoint.nextPoint();\n        hudElements.crosshair.x = movePoint.x;\n        hudElements.crosshair.y = movePoint.y;\n\n        // simulate horizon tilt\n        flightData.next();\n        //hudElements.horizon.tilt = tiltHorizon.nextPoint();\n\n        // simulate compass rotation\n        hudElements.compass.angle = flightData.yaw;\n\n        // simulate pitch and roll\n        hudElements.pitchLader.rot = flightData.roll;//rotCompass.nextPoint();\n        hudElements.pitchLader.angle = flightData.pitch;//pitch.nextPoint();\n        //console.log(pitch.nextPoint());\n        // redraw\n        Object.values(hudElements).forEach(val => {val.draw()});\n\n        hudTexture.needsUpdate = true;\n      }\n\n\n    function flipHoriz(drawing){\n        drawing.translate(screenDimensions.width/2,0);\n        drawing.scale(-1, 1);\n    }\n\n\tfunction update(time) {\n        //then = now;\n        now = time;\n        elapsed = now - then;\n        if (elapsed > interval){\n            draw();\n            //console.log(time);\n            then = now;\n        }\n    }\n    function getCanvas(){\n         return hudCanvas;\n    }\n    return {\n        update,\n        getCanvas,\n        draw\n    }\n}","import * as THREE from 'three';\nimport SceneSubject from './SceneSubject';\nimport GeneralLights from './GeneralLights';\nimport { StereoEffect } from './StereoEffect.js';\nimport Hud from './Hud';\nexport default function canvas(canvas)  {\n    var preserveSize = true;\n\n    const clock = new THREE.Clock();\n    const origin = new THREE.Vector3(0,0,0);\n\n    const screenDimensions = {\n        width: canvas.width,\n        height: canvas.height\n    }\n    \n    const mousePosition = {\n        x: 0,\n        y: 0\n    }\n\n    const scene = buildScene();\n    const renderer = buildRender(screenDimensions);\n    const camera = buildCamera(screenDimensions);\n    const sceneSubjects = createSceneSubjects(scene);\n    var hud = new Hud(scene,canvas,0.5);\n    var effect = new StereoEffect( renderer );\n    effect.setSize( screenDimensions.width, screenDimensions.height );\n    effect.setEyeSeparation(0.064);\n    effect.setOffset(0);\n\n    var viewer = renderer;\n    \n    scene.add(camera);\n\n    if (preserveSize){\n        // remember these initial values\n        var tanFOV = Math.tan( ( ( Math.PI / 180 ) * camera.fov / 2 ) );\n        var windowHeight = 150;//window.innerHeight;\n    }\n    window.addEventListener(\"keypress\", onKeyPress);\n\n    function getOffset(){\n        const pxMm = 0.254/454;\n        return (screenDimensions.width -300)*pxMm;\n    }\n    function buildScene() {\n        const scene = new THREE.Scene();\n        scene.background = new THREE.Color('black');\n\n        return scene;\n    }\n\n    function buildRender({ width, height }) {\n        const renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true, alpha: true }); \n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\n\n        renderer.setPixelRatio(DPR);\n        renderer.setSize(width, height);\n        renderer.autoClear = false;     //needed for canvas2d overlayed\n        renderer.gammaInput = true;\n        renderer.gammaOutput = true; \n        \n        return renderer;\n    }\n\n    function buildCamera({ width, height }) {\n        const aspectRatio = width / height;\n        const fieldOfView = 90;\n        const nearPlane = 0.0001;\n        const farPlane = 20; \n        const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n        camera.focus = 3;\n        camera.position.set(0, 0, 0);\n\n        return camera;\n    }\n\n    function createSceneSubjects(scene) {\n        const sceneSubjects = [\n            new GeneralLights(scene),\n            //new SceneSubject(scene),\n        ];\n        return sceneSubjects;\n    }\n\n\n    function update() {\n        const elapsedTime = clock.getElapsedTime();\n        \n        for(let i=0; i<sceneSubjects.length; i++)\n            sceneSubjects[i].update(elapsedTime);\n        //renderer.render(scene, camera);\n        //console.log(canvas);\n        \n        hud.update(elapsedTime);\n        render(viewer);\n        \n        \n    }\n    function render(viewer) {\n        //updateCameraPositionRelativeToMouse()\n        viewer.render(scene, camera);\n        //effect.render( scene, camera );\n        \n    }\n    function onKeyPress(ev) {\n        let keycode = ev.which;\n        if (\n          (keycode >= 48 && keycode <= 57) ||\n          (keycode >= 97 && keycode <= 122) ||\n          (keycode >= 65 && keycode <= 90)\n        ) {\n            //if(keycode == 49) {offset= offset +0.1;effect.setOffset(offset);}\n            //if(keycode == 50) {offset = offset -0.1;effect.setOffset(offset);}\n            //if(keycode == 51) {camera.rotateY(Math.PI/360);}\n            //if(keycode == 52) {camera.rotateY(-Math.PI/360);}\n            //console.log( offset);\n            //if(keycode == 51) hud.draw();\n        }\n      }\n\n\n    function updateCameraPositionRelativeToMouse() {\n        camera.position.x += (  (mousePosition.x * 0.1) - camera.position.x ) * 0.1;\n        camera.position.y += ( -(mousePosition.y * 0.1) - camera.position.y ) * 0.1;\n        camera.lookAt(origin );\n    }\n\n    function onWindowResize() {\n        const { width, height } = canvas;\n        \n        screenDimensions.width = width;\n        screenDimensions.height = height;\n\n        camera.aspect = width / height;\n        if (preserveSize){\n            // adjust the FOV\n            camera.fov = ( 360 / Math.PI ) * Math.atan( tanFOV * ( height / windowHeight ) );\n            effect.setOffset(getOffset());\n        }\n\n        camera.updateProjectionMatrix();\n        effect.setSize( width, height);\n        //camera.lookAt( scene.position );\n        renderer.setSize(width, height);   \n    }\n    /*function getRenderer(){\n        return renderer;\n    }*/\n\n    function animate(){\n        renderer.setAnimationLoop( function () {\n            \n            //renderer.render( scene, camera );\n            update();\n            \n        } );\n\n    }\n\n    function onMouseMove(x, y) {\n        mousePosition.x = x;\n        mousePosition.y = y;\n    }\n    function getScene(){\n        return scene;\n    }\n    return {\n        update,\n        onWindowResize,\n        onMouseMove,\n        //getRenderer,\n        animate,\n        getScene\n    }\n}","import SceneManager from './SceneManager';\n\nexport default container => {\n    \n    const canvas = createCanvas(document, container);\n    const sceneManager = new SceneManager(canvas);\n    \n    \n    let canvasHalfWidth;\n    let canvasHalfHeight;\n\n    bindEventListeners();\n    sceneManager.animate();\n    \n    //var renderer = sceneManager.getRenderer();\n    //render();\n    \n    function createCanvas(document, container) {\n        const canvas = document.createElement(\"canvas\");    \n        container.appendChild(canvas);   \n        return canvas;\n    }\n\n    function bindEventListeners() {\n        window.onresize = resizeCanvas;\n        //window.onmousemove = mouseMove;\n        resizeCanvas();\t\n    }\n\n    function resizeCanvas() {        \n        canvas.style.width = '100%';\n        canvas.style.height= '100%';\n        \n        canvas.width  = canvas.offsetWidth;\n        canvas.height = canvas.offsetHeight;\n\n        canvasHalfWidth = Math.round(canvas.offsetWidth/2);\n        canvasHalfHeight = Math.round(canvas.offsetHeight/2);\n\n        sceneManager.onWindowResize();\n        //hudManager.onWindowResize()\n    }\n\n    function mouseMove({screenX, screenY}) {\n        sceneManager.onMouseMove(screenX-canvasHalfWidth, screenY-canvasHalfHeight);\n    }\n\n    //function render(time) {\n        \n     //   sceneManager.update();\n        //hudManager.update();\n    //    requestAnimationFrame(render);\n    //}/\n    //renderer.setAnimationLoop( function () {\n\n        //renderer.render( scene, camera );\n     //   sceneManager.update();\n    //} );\n\n}\n","import React, { Component } from 'react';\n\nimport threeEntryPoint from \"./threejs/threeEntryPoint\"\nimport \"./viewer.css\"\n\nexport default class Viewer extends Component {\n    \n    componentDidMount() {\n        threeEntryPoint(this.threeRootElement);\n    }\n\n    render () {\n        return (\n            <div className=\"viewer-viewer\" ref={element => this.threeRootElement = element} />\n        );\n    }\n}","import './App.css';\nimport Viewer from './Components/Viewer/Viewer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Viewer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}