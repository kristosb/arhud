{"version":3,"sources":["Components/Viewer/threejs/GeneralLights.js","../../stereogram/src/hudDataSimulation.js","../../stereogram/src/HudControls.js","../../stereogram/src/StereoCamera.js","../../stereogram/src/StereoEffect.js","../../stereogram/src/StereoButton.js","Components/Viewer/threejs/Imu.js","Components/Viewer/threejs/Hud.js","Components/Viewer/threejs/SceneManager.js","Components/Viewer/threejs/threeEntryPoint.js","Components/Viewer/Viewer.js","App.js","reportWebVitals.js","index.js"],"names":["scene","light","THREE","position","set","add","update","time","leading_zeros","dt","getTimeString","d","Date","getHours","getMinutes","getSeconds","easing","mx","mn","inc","val","this","min","max","value","_inc","_min","_max","_value","bouncer","width","height","x","y","vx","vy","sineEasing","yaw","Math","sin","PI","linearEasing360","magnetInc","airplaneTelemetry","rollModel","yawModel","pitchModel","_roll","nextPoint","_pitch","_yaw","roll","pitch","hudControl","bm","_x","_y","lineWidth","globalLineWidth","localLineWidth","hudSimpleText","fontSize","txt","font","textAlign","fillText","hudBorder","strokeRect","crosshair","floor","strokeWidth","beginPath","moveTo","lineTo","closePath","stroke","horizon","tilt","angle","save","translate","rotate","restore","range","start","end","Array","fill","map","_","idx","limitCompass","limitPitchLadder","rangeClip","rangeArray","limit","compass","tickSpace","_range","middle","tickHeight","scale","rangeScale","tiltFloor","tiltRemd","tiltRemdHalf","scaleVals","space","spaceHalf","forEach","toString","pitchLader","rot","middleOffset","rotation","sign","setLineDash","DEG2RAD","_eyeRight","Matrix4","_eyeLeft","offsetView","StereoCamera","type","aspect","eyeSep","offset","cameraL","PerspectiveCamera","layers","enable","matrixAutoUpdate","cameraR","_cache","focus","fov","near","far","zoom","camera","cache","xmin","xmax","projectionMatrix","clone","eyeSepHalf","eyeSepOnProjection","ymax","tan","elements","identity","setPosition","copy","multiply","matrixWorld","StereoEffect","renderer","_stereo","size","Vector2","getSize","setEyeSeparation","setOffset","setSize","render","updateMatrixWorld","parent","autoClear","clear","setScissorTest","setScissor","setViewport","StereoButton","fullSize","landscapeLock","viewer","effect","currentSession","element","button","document","createElement","id","style","display","bottom","padding","border","borderRadius","background","color","opacity","outline","zIndex","cursor","left","textContent","that","onmouseenter","onmouseleave","onclick","fullscreenElement","documentElement","requestFullscreen","screen","orientation","lock","unlock","exitFullscreen","window","innerWidth","innerHeight","degtorad","matrixMultiply","a","b","screenTransform","screenOrientation","orientationAngle","cA","cos","sA","getScreenTransformationMatrix","worldTransform","getWorldTransformationMatrix","degToRad","deg","radToDeg","rad","imu","_compass","_updated","objOrientation","addEventListener","event","heading","attitude","bank","ch","sh","ca","sa","cb","sb","matrix2","matrix","atan2","asin","eulerAngles","alpha","beta","gamma","HEADING","BANK","ATTITUDE","isMobileCheck","test","navigator","userAgent","orientationData","forceMobile","isMobile","console","log","flightData","IMU","SGRAM","next","hud","canvas","now","planeSize","screenDimensions","then","interval","hudCanvas","hudBitmap","getContext","fillStyle","strokeStyle","globalAlpha","hudElements","info","Object","values","draw","hudTexture","needsUpdate","material","transparent","planeGeometry","plane","name","movePoint","clearRect","text","clock","mousePosition","buildScene","antialias","DPR","devicePixelRatio","setPixelRatio","gammaInput","gammaOutput","buildRender","aspectRatio","buildCamera","sceneSubjects","GeneralLights","createSceneSubjects","Hud","body","appendChild","createButton","tanFOV","windowHeight","elapsedTime","getElapsedTime","i","length","ev","which","onWindowResize","atan","updateProjectionMatrix","onMouseMove","animate","setAnimationLoop","Viewer","container","createCanvas","sceneManager","SceneManager","resizeCanvas","offsetWidth","offsetHeight","round","onresize","threeEntryPoint","threeRootElement","className","ref","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.873b29ba.chunk.js","sourcesContent":["import * as THREE from 'three'\n\n\nexport default function scene(scene) {    \n\n    /*const lightIn = new THREE.PointLight(\"#4CAF50\", 30);\n    const lightOut = new THREE.PointLight(\"#2196F3\", 10);\n    lightOut.position.set(40,20,40);*/\n    const color = 0xFFFFFF;\n    const intensity = 1;\n    const light = new THREE.DirectionalLight(color, intensity);\n    //light.position.set(-1, 2, 4);\n    light.position.set(-1, 2, 4);\n    scene.add(light);\n    //scene.add(lightIn);\n    //scene.add(lightOut);\n    \n    //const rad = 80;\n\n    function update(time) {\n        //const x = rad * Math.sin(time*0.2)\n        //lightOut.position.x = x;\n    }\n\n    return {\n        update\n    }\n}","\n// get the time as string with leading zeros\nfunction leading_zeros(dt) \n{ \n    return (dt < 10 ? '0' : '') + dt;\n}\nexport function getTimeString(){\n    var d = new Date();\n    return `TIME:${leading_zeros(d.getHours())}:${leading_zeros(d.getMinutes())}:${leading_zeros(d.getSeconds())}`;\n} \n\nclass easing{\n    constructor(mx,mn,inc, val){\n    this.min = mn;\n    this.max = mx;\n    this.inc = inc;\n    this.value = val;\n    }\n    set inc(inc){\n        this._inc = inc;\n    }\n    set min(min){\n        this._min = min;\n    }\n    set max(max){\n        this._max = max;\n    }\n    set value(value){\n        this._value = value;\n    }\n    get value(){\n        return this._value;\n    }\n    get inc(){\n        return this._inc;\n    }\n    get min(){\n        return this._min;\n    }\n    get max(){\n        return this._max;\n    }\n}\n\n// bounce the point within the screen limit\nexport class bouncer{\n    constructor(width, height){\n        this.width = width;\n        this.height = height;\n        this.x =0;\n        this.y = 0;\n        this.vx = 5;\n        this.vy = 2;\n    }\n    \n    nextPoint(){\n        this.x = this.x  +this.vx;\n        this.y = this.y  +this.vy;\n        if (this.y+ this.vy > this.height || this.y + this.vy < 0) {\n            this.vy = -this.vy;\n        }\n        if (this.x + this.vx > this.width/2 || this.x+ this.vx < 0) {\n            this.vx = -this.vx;\n        }\n    }\n\n}\n\n// simulate +/- movement with sine easing\nexport class sineEasing extends easing{\n    constructor(){\n        super(1,-1,0.02,0);\n        this.yaw = 0.02;\n    }\n    nextPoint(){\n        if (this.value>this._max)this.yaw = -this.inc;\n        if (this.value<this._min)this.yaw = this.inc;\n        this.value += this.yaw;\n        return Math.sin(Math.PI*this.value/2)*90;\n    }\n}\n\nexport class linearEasing360 extends easing{\n    constructor(inc=0.1){\n        super(10,-10,inc,0);\n        this.magnetInc = this._inc;\n    }\n    nextPoint(){\n        if (this.value > this._max) this.magnetInc = -this._inc;\n        if (this.value <=  this._min ) this.magnetInc = this._inc;\n        this.value += this.magnetInc;\n        return this.value;\n    }\n}\n\nexport class airplaneTelemetry{\n    constructor(){\n        this.rollModel = new sineEasing();\n        this.rollModel.max = 0.4;\n        this.rollModel.min = -0.4;\n        this.yawModel = new linearEasing360(1);\n        this.yawModel.max = 30;\n        this.yawModel.min = 0;\n        this.pitchModel = new linearEasing360(0.7);\n        this.pitchModel.max = 25;\n        this.pitchModel.min = -25;\n        this._roll = this.rollModel.nextPoint();\n        this._pitch = this.pitchModel.nextPoint();\n        this._yaw = this.yawModel.nextPoint();\n    }\n    get roll(){\n        return this._roll;\n    }\n    get pitch(){\n        return this._pitch;\n    }\n    get yaw(){\n        return this._yaw;\n    }\n    next(){\n        if (this.roll >= 40 || this.roll <= -40){\n            this._pitch = this.pitchModel.nextPoint();\n            if (this.pitch >15 || this.pitch <-15 ) this._roll = this.rollModel.nextPoint();\n        }else this._roll = this.rollModel.nextPoint();\n        this._yaw = this.yawModel.nextPoint();\n        //console.log(this._yaw);\n    }\n}\n\nexport default {getTimeString, bouncer, sineEasing, linearEasing360, airplaneTelemetry}"," class hudControl {\n     constructor(bm, x, y){\n        this.bm = bm;\n        this._x = x;\n        this._y = y;\n        this.lineWidth = this.bm.lineWidth;\n        this.globalLineWidth = this.bm.lineWidth;\n     }\n     set lineWidth(lineWidth){\n        this.localLineWidth = lineWidth;\n    }\n    set x(x){\n        this._x = x;\n    }\n    get x(){\n        return this._x;\n    }\n    set y(y){\n        this._y = y;\n    }\n    get y(){\n        return this._y;\n    }\n    changeLocalLineWidth(){\n        this.globalLineWidth = this.bm.lineWidth;\n        this.bm.lineWidth = this.localLineWidth;\n    }\n    resetGlobalLineWidth(){\n        this.bm.lineWidth = this.globalLineWidth;\n    }\n     draw(){\n\n     }\n }\n\n\nexport class hudSimpleText extends hudControl{\n    constructor(bm, x, y, fontSize) {\n        super(bm,x,y);\n        this.txt = \"hello...\"\n        this.fontSize = fontSize;\n    }\n    set text(txt){\n        this.txt = txt;\n    }\n    draw(){\n        this.bm.font = `bold ${this.fontSize}px Arial`;\n        this.bm.textAlign = 'start';\n        this.bm.fillText(this.txt, this.x, this.y);\n    }\n  }\n\n  function wrapText(context, text, x, y, maxWidth, lineHeight) {\n    var words = text.split(' ');\n    var line = '';\n\n    for(var n = 0; n < words.length; n++) {\n      var testLine = line + words[n] + ' ';\n      var metrics = context.measureText(testLine);\n      var testWidth = metrics.width;\n      if (testWidth > maxWidth && n > 0) {\n        context.fillText(line, x, y);\n        line = words[n] + ' ';\n        y += lineHeight;\n      }\n      else {\n        line = testLine;\n      }\n    }\n    context.fillText(line, x, y);\n  }\n\n  export class hudWrappedText extends hudControl{\n    constructor(bm, x, y, fontSize) {\n        super(bm,x,y);\n        this.txt = \"hello...\"\n        this.fontSize = fontSize;\n    }\n    set text(txt){\n        this.txt = txt;\n    }\n    draw(){\n        this.bm.font = `bold ${this.fontSize}px Arial`;\n        wrapText(this.bm, this.txt, this.x, this.y, 100, this.fontSize+2);\n    }\n  }\n\n\n\n  \nexport class hudBorder extends hudControl{\n    constructor(bm, width, height) {\n        super(bm,0,0);\n        this.width = width;\n        this.height = height;\n    }  \n    draw(){\n        super.changeLocalLineWidth();\n        this.bm.strokeRect(0,0,this.width, this.height);\n        super.resetGlobalLineWidth();\n    }\n\n  }\n \nexport class crosshair extends hudControl{\n    constructor(bm, width, height) {\n        super(bm,width / 2,height / 2);\n        this.width = width;\n        this.height = height;\n\n    }\n\n    draw(){\n        // remove aliasing\n        this.x = Math.floor(this.x) + 0.5;\n        this.y = Math.floor(this.y) + 0.5;\n        super.changeLocalLineWidth();\n        this.bm.strokeWidth = 1;\n        this.bm.beginPath();\n        this.bm.moveTo(this.x, this.y - 10);\n        this.bm.lineTo(this.x, this.y + 10);\n        this.bm.moveTo(this.x - 10,  this.y);\n        this.bm.lineTo(this.x + 10,  this.y);\n        this.bm.closePath();\n        this.bm.stroke();\n        super.resetGlobalLineWidth();\n    }\n  }\n\n  export class horizon extends hudControl{\n    constructor(bm, width, height) {\n        super(bm,width / 2,height / 2);\n        this.width = width;\n        this.height = height;\n        this.tilt = 0;\n    }\n    set angle(angle){\n        this.tilt = angle;\n    }\n    draw(){\n        // remove aliasing\n        this.x = Math.floor(this.x) + 0.5;\n        this.y = Math.floor(this.y) + 0.5;\n        this.bm.save();\n        //this.bm.clearRect(0,0,this.width,this.height);\n        this.bm.translate(this.width/2, this.height/2)\n        this.bm.rotate((Math.PI / 180) * this.tilt); // rotate\n        this.bm.translate(-this.width/2, -this.height/2)\n        super.changeLocalLineWidth();\n        this.bm.strokeWidth = 1;\n        this.bm.beginPath();\n        this.bm.moveTo(this.x-20, this.y);\n        this.bm.lineTo(this.x-10, this.y);\n        this.bm.moveTo(this.x-10, this.y);\n        this.bm.lineTo(this.x, this.y -10 );\n        this.bm.moveTo(this.x, this.y -10 );\n        this.bm.lineTo(this.x+10, this.y);\n        this.bm.moveTo(this.x+10,  this.y);\n        this.bm.lineTo(this.x+20,  this.y);\n        this.bm.closePath();\n        this.bm.stroke();\n        super.resetGlobalLineWidth();\n        \n        this.bm.restore();\n    }\n  }\n\n  function range(start, end, inc) {\n    //console.log(start,end);\n    return Array(end/inc - (start/inc) + 1).fill().map((_, idx) => start+ idx*inc);\n  }\n  function limitCompass(x){\n    if(x<0) x = x+ 360;\n    if(x>359) x = x -360;\n    return x;\n  }\n  function limitPitchLadder(x){\n    if(x<-90) x = -180-x;\n    if(x>90) x = 180-x ;\n    return x;\n  }\n  function rangeClip(rangeArray,limit){\n    return rangeArray.map(x=>limit(x));\n  }\n  function rangeClip360(rangeArray){\n    return rangeArray.map(x=>limit(x));\n  }\n  export class compass extends hudControl{\n    constructor(bm, width, height, tickSpace =40, range = 4) {   \n        super(bm,width/2- 40*(4/2),height / 7);\n        this.tickSpace = tickSpace;\n        this._range = range;\n        //this.middle =  this.tickSpace*(this._range/2);\n        this.middle = width/2;\n        this.width = width;\n        this.height = height;\n        this.tilt = 0;\n        this.tickHeight = 15;\n        \n        this.scale = 10;\n        //this.scaleVals = range(10/this.scale,50/this.scale,this.scale);\n        //console.log(this.scaleVals);\n        this.x = Math.floor(this.x) + 0.5;\n        this.y = Math.floor(this.y) + 0.5;\n        \n        \n    }\n    set angle(angle){\n        this.tilt = angle;\n    }\n    set range(range){\n        this._range = range;\n    }\n    set rangeScale(rangeScale){\n        this.scale = rangeScale;\n    }\n    draw(){\n        var tiltFloor = Math.floor(this.tilt);\n        var tiltRemd = Math.floor(this.tilt * 10/this.scale) % 10;\n        var tiltRemdHalf = Math.floor((this.tilt/this.scale+0.5) * 10) % 10;\n        this.scaleVals = range(\n            Math.floor(this.tilt/this.scale)*this.scale-Math.floor(this.scale*this._range/2),\n            Math.floor(this.tilt/this.scale)*this.scale+ Math.floor(this.scale*this._range/2),\n            this.scale);\n        this.scaleVals = rangeClip(this.scaleVals,limitCompass);\n        this.tilt = tiltFloor + tiltRemd/10;\n\n        super.changeLocalLineWidth();\n        this.bm.beginPath();\n        \n        var space = this.x-tiltRemd*this.tickSpace/10;\n        var spaceHalf = this.x-tiltRemdHalf*this.tickSpace/10;\n        this.scaleVals.forEach((val,idx)=>{\n            this.bm.font = `bold ${12}px Arial`;\n            this.bm.textAlign = 'start';\n            this.bm.fillText(val.toString(), space-5, this.y-this.tickHeight-2);\n            this.bm.moveTo(space, this.y);\n            this.bm.lineTo(space, this.y-this.tickHeight); \n            this.bm.moveTo(spaceHalf, this.y);\n            this.bm.lineTo(spaceHalf, this.y-this.tickHeight/2); \n            space += this.tickSpace;\n            spaceHalf += this.tickSpace;\n        });\n        //var middle =  this.tickSpace*(this._range/2);\n        this.bm.moveTo(this.middle, this.y+15);\n        this.bm.lineTo(this.middle, this.y+15 -this.tickHeight); \n        this.bm.fillText(tiltFloor.toString(), this.middle+4, this.y+15);\n        this.bm.closePath();\n        this.bm.stroke();\n        super.resetGlobalLineWidth(); \n    }\n  }\nexport class pitchLader extends hudControl {\n    constructor(bm, width, height){\n        super(bm,0,0);\n        this.width = width;\n        this.height = height;\n        this.middle = width/2;\n        this.tilt = 0;\n        this.rot = 0;\n        this.tickHeight = 100;\n        this.tickSpace = 40;\n        this.scale = 10;\n        //this.x = Math.floor(this.x) + 0.5;\n        //this.y = Math.floor(this.y) + 0.5;\n        this._range = 4;\n        this.middleOffset = height -(height - this.tickSpace*this._range )/2;// +this.tickSpace;\n    }\n    set angle(angle){\n        this.tilt = angle;\n    }\n    set rotation(rotation){\n        this.rot = rotation;\n    }\n    set range(range){\n        this._range = range;\n    }\n    set rangeScale(rangeScale){\n        this.scale = rangeScale;\n    }\n    draw(){\n        this.bm.save();\n        this.bm.translate(this.width/2, this.height/2);\n        this.bm.rotate((Math.PI / 180) * this.rot); // rotate\n        this.bm.translate(-this.width/2, -this.height/2);\n\n        var tiltFloor = Math.floor(this.tilt);\n        var tiltRemd = Math.floor(this.tilt * 10/this.scale) % 10;\n        this.scaleVals = range(\n            Math.floor(this.tilt/this.scale)*this.scale - Math.floor(this.scale*this._range/2),\n            Math.floor(this.tilt/this.scale)*this.scale + Math.floor(this.scale*this._range/2),\n            this.scale);\n        this.scaleVals = rangeClip(this.scaleVals, limitPitchLadder);\n        this.tilt = tiltFloor + tiltRemd/10;\n        \n        var space = 0;\n        if (tiltRemd >=0) \n            space = this.middleOffset +tiltRemd*this.tickSpace/10;\n        else \n            space = this.middleOffset + (10*this.tickSpace/10 +tiltRemd*this.tickSpace/10);\n\n        super.changeLocalLineWidth();\n\n        this.scaleVals.forEach((val,idx)=>{\n            this.bm.beginPath();\n            this.bm.font = `bold ${12}px Arial`;\n            this.bm.textAlign = 'start';\n            var sign = 1;\n            if (val<0) {\n                this.bm.setLineDash([3, 2]);\n                sign = -1;\n            }\n            if (val != 0){\n                this.bm.moveTo(this.middle - this.tickHeight/2, space);\n                this.bm.lineTo(this.middle - this.tickHeight*0.3, space); \n                this.bm.moveTo(this.middle + this.tickHeight*0.3, space);\n                this.bm.lineTo(this.middle + this.tickHeight/2, space); \n                this.bm.moveTo(this.middle - this.tickHeight/2, space);\n                this.bm.lineTo(this.middle - this.tickHeight/2, space+10*sign); \n                this.bm.moveTo(this.middle + this.tickHeight/2, space);\n                this.bm.lineTo(this.middle + this.tickHeight/2, space+10*sign); \n                this.bm.fillText(val.toString(), this.middle - this.tickHeight/2 -25, space+8*sign);\n            }else{\n                this.bm.moveTo(this.middle - this.tickHeight*0.8, space);\n                this.bm.lineTo(this.middle - this.tickHeight*0.3, space); \n                this.bm.moveTo(this.middle + this.tickHeight*0.3, space);\n                this.bm.lineTo(this.middle + this.tickHeight*0.8, space); \n            }\n            space -= this.tickSpace;\n            this.bm.closePath();\n            this.bm.stroke();\n            this.bm.setLineDash([]);\n        });\n        \n        super.resetGlobalLineWidth(); \n        this.bm.restore();\n    }\n}\n\n\n\nexport default { hudSimpleText, hudWrappedText, hudBorder, crosshair, horizon, compass, pitchLader }\n","import { Matrix4 } from 'three/src/math/Matrix4.js';\n//import { MathUtils } from 'three/src/math/MathUtils.js';\nimport { PerspectiveCamera } from 'three/src/cameras/PerspectiveCamera.js';\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\nconst _eyeRight = new Matrix4();\nconst _eyeLeft = new Matrix4();\nconst offsetView = new Matrix4();\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n        this.offset = 0;\n        \n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null,\n            offset: null\n\t\t};\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep || cache.offset !== this.offset;;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n            cache.offset = this.offset;\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n            var xminFixed = - ymax  + eyeSepOnProjection;\n\t\t\tvar xmaxFixed = ymax + eyeSepOnProjection;\n\n            offsetView.identity();\n            offsetView.setPosition(this._cache.offset,0,0);\n            offsetView.copy(offsetView.multiply(projectionMatrix));\n\n            this.cameraL.projectionMatrix.copy( offsetView );\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n            xminFixed = - ymax  + eyeSepOnProjection;\n\t\t\txmaxFixed = ymax + eyeSepOnProjection;\n\n            offsetView.identity();\n            offsetView.setPosition(-this._cache.offset,0,0);\n            offsetView.copy(offsetView.multiply(projectionMatrix));\n\n\t\t\tthis.cameraR.projectionMatrix.copy( offsetView );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n        \n\t}\n\n}\n\nexport { StereoCamera };","/*import {\n\tStereoCamera,\n\tVector2\n} from 'three/build/three.module.js';*/\nimport {\n\tVector2\n} from 'three/build/three.module.js';\n\nimport {StereoCamera} from \"./StereoCamera.js\"\n\nvar StereoEffect = function ( renderer ) {\n\n\tvar _stereo = new StereoCamera();\n\t_stereo.aspect = 0.5;\n\tvar size = new Vector2();\n\n    renderer.getSize( size );\n\n\tthis.setEyeSeparation = function ( eyeSep ) {\n\n\t\t_stereo.eyeSep = eyeSep;\n\n\t};\n    this.setOffset = function ( offset ) {\n\n\t\t_stereo.offset = offset;\n\n\t};\n\n\tthis.setSize = function ( width, height ) {\n\n\t\trenderer.setSize( width, height );\n\n\t};\n\n\tthis.render = function ( scene, camera ) {\n\t\tscene.updateMatrixWorld();\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n        \n\t\t_stereo.update( camera );\n        \n\t\trenderer.getSize( size );\n        \n\t\tif ( renderer.autoClear ) renderer.clear();\n\t\trenderer.setScissorTest( true );\n\n\t\trenderer.setScissor( 0, 0, size.width / 2, size.height );\n\t\trenderer.setViewport( 0, 0, (size.width / 2), size.height );\n\t\trenderer.render( scene, _stereo.cameraL );\n\n\t\trenderer.setScissor( (size.width / 2), 0, size.width / 2, size.height );\n\t\trenderer.setViewport( (size.width / 2), 0, (size.width / 2), size.height );\n\t\trenderer.render( scene, _stereo.cameraR );\n\n\t\trenderer.setScissorTest( false );\n        \n\t};\n\n};\n\nexport { StereoEffect };","import { StereoEffect } from './StereoEffect.js';\n\nfunction stylizeElement( element ) {\n\n    element.style.position = 'absolute';\n    element.style.bottom = '20px';\n    element.style.padding = '12px 6px';\n    element.style.border = '1px solid #fff';\n    element.style.borderRadius = '4px';\n    element.style.background = 'rgba(0,0,0,0.1)';\n    element.style.color = '#fff';\n    element.style.font = 'normal 13px sans-serif';\n    element.style.textAlign = 'center';\n    element.style.opacity = '0.5';\n    element.style.outline = 'none';\n    element.style.zIndex = '999';\n\n}\n\nclass StereoButton {\n    constructor(renderer){\n        this.renderer = renderer;\n        this.type = \"single\";\n        this.fullSize = false;\n        this.landscapeLock = true;\n        this.viewer = renderer;\n\n        this.effect = new StereoEffect( this.renderer );\n        this.effect.setSize( 600, 300 );\n        this.effect.setEyeSeparation(0.064);\n        this.effect.setOffset(0);\n        this.currentSession = false;\n        //this.createButton();\n    }\n    createButton(){\n        this.button =document.createElement( 'button' );\n        this.button.id = 'VRButton';\n        this.button.style.display = 'none';\n\n        stylizeElement( this.button );\n        this.button.style.display = '';\n\n        this.button.style.cursor = 'pointer';\n        this.button.style.left = 'calc(50% - 50px)';\n        this.button.style.width = '100px';\n\n        this.button.textContent = 'ENTER VR';\n        var that = this;\n        this.button.onmouseenter = function () {\n            //console.log(this);\n            that.button.style.opacity = '1.0';\n\n        };\n\n        this.button.onmouseleave = function () {\n\n            if(that.currentSession) \n                that.button.style.opacity = '0.1';\n            else \n                that.button.style.opacity = '0.5';\n\n        };\n\n        this.button.onclick = function () {\n            if ( that.currentSession === false ) {\n                //onSessionStarted(button);\n                if(document.fullscreenElement === null && that.fullSize) {\n                    document.documentElement.requestFullscreen();\n                    // orientation lock works only in full screen mode\n                    if(that.landscapeLock) screen.orientation.lock(\"landscape\");\n                }\n                \n                //session.addEventListener( 'click', onSessionEnded );\n                //await renderer.xr.setSession( session );\n                that.button.textContent = 'EXIT VR';\n                that.button.style.opacity = '0.1';\n                that.currentSession = true;\n                that.viewer = that.effect;\n                that.type = \"vr\";\n                \n\n            } else {\n                if(document.fullscreenElement !== null) {\n                    // orientation lock works only in full screen mode\n                    if(that.landscapeLock)  screen.orientation.unlock();\n                    document.exitFullscreen();                   \n                }\n                //currentSession.removeEventListener( 'click', onSessionEnded );\n                that.button.style.opacity = '0.5';\n                that.button.textContent = 'ENTER VR';\n                that.currentSession = false;\n                that.viewer = that.renderer;\n                that.type = \"single\";\n                \n            }\n            that.viewer.setSize(window.innerWidth,window.innerHeight);  \n        };\n        return this.button;\n    }\n\n    render(scene, camera){\n        this.viewer.render(scene, camera);\n    }\n    setSize(width, height){\n        this.viewer.setSize(width, height);\n    }\n    setOffset(offset){\n        if(this.type === \"vr\") this.viewer.setOffset(offset);\n    }\n    enableStereo(){\n        if ( this.currentSession === false ) {\n            if(this.button){\n                this.button.textContent = 'EXIT VR';\n                this.button.style.opacity = '0.1';\n            }\n            this.currentSession = true;\n            this.viewer = this.effect;\n            this.type = \"vr\";\n            this.viewer.setSize(window.innerWidth,window.innerHeight); \n        } \n         \n    }\n    disableStereo(){\n        if ( this.currentSession !== false ){\n            if(this.button){\n                this.button.style.opacity = '0.5';\n                this.button.textContent = 'ENTER VR';\n            }\n            this.currentSession = false;\n            this.viewer = this.renderer;\n            this.type = \"single\";\n            this.viewer.setSize(window.innerWidth,window.innerHeight); \n        }\n    }\n\n}\n\nexport { StereoButton };","import * as THREE from 'three';\nvar degtorad = Math.PI / 180; // Degree-to-Radian conversion\n\nfunction compassHeading( alpha, beta, gamma ) {\n\n  var _x = beta  ? beta  * degtorad : 0; // beta value\n  var _y = gamma ? gamma * degtorad : 0; // gamma value\n  var _z = alpha ? alpha * degtorad : 0; // alpha value\n\n  var cX = Math.cos( _x );\n  var cY = Math.cos( _y );\n  var cZ = Math.cos( _z );\n  var sX = Math.sin( _x );\n  var sY = Math.sin( _y );\n  var sZ = Math.sin( _z );\n\n  // Calculate Vx and Vy components\n  var Vx = - cZ * sY - sZ * sX * cY;\n  var Vy = - sZ * sY + cZ * sX * cY;\n\n  // Calculate compass heading\n  var compassHeading = Math.atan( Vx / Vy );\n\n  // Convert compass heading to use whole unit circle\n  if( Vy < 0 ) {\n    compassHeading += Math.PI;\n  } else if( Vx < 0 ) {\n    compassHeading += 2 * Math.PI;\n  }\n\n  return compassHeading * ( 180 / Math.PI ); // Compass Heading (in degrees)\n\n}\n///////\nfunction getScreenTransformationMatrix( screenOrientation ) {\n\tvar orientationAngle = screenOrientation ? screenOrientation * degtorad : 0;\n\n\tvar cA = Math.cos( orientationAngle );\n\tvar sA = Math.sin( orientationAngle );\n\n\t// Construct our screen transformation matrix\n\tvar r_s = [\n\t\t[cA,    -sA,    0],\n\t\t[sA,    cA,     0],\n\t\t[0,     0,      1]\n\t];\n\n\treturn r_s;\n}\nfunction getWorldTransformationMatrix() {\n\tvar x = 90 * degtorad;\n\n\tvar cA = Math.cos( x );\n\tvar sA = Math.sin( x );\n\n\t// Construct our world transformation matrix\n\tvar r_w = [\n\t\t[1,     0,    0],\n\t\t[0,     cA,   -sA],\n\t\t[0,     sA,   cA]\n\t];\n\n\treturn r_w;\n}\n\nfunction matrixMultiply( a, b ) {\n\tvar final = \n    [\n\t[a[0][0] * b[0][0] + a[0][1] * b[1][0] + a[0][2] * b[2][0],\n\t a[0][0] * b[0][1] + a[0][1] * b[1][1] + a[0][2] * b[2][1],\n\t a[0][0] * b[0][2] + a[0][1] * b[1][2] + a[0][2] * b[2][2] ],\n    [a[1][0] * b[0][0] + a[1][1] * b[1][0] + a[1][2] * b[2][0],\n\t a[1][0] * b[0][1] + a[1][1] * b[1][1] + a[1][2] * b[2][1],\n\t a[1][0] * b[0][2] + a[1][1] * b[1][2] + a[1][2] * b[2][2] ],\n    [a[2][0] * b[0][0] + a[2][1] * b[1][0] + a[2][2] * b[2][0],\n\t a[2][0] * b[0][1] + a[2][1] * b[1][1] + a[2][2] * b[2][1],\n\t a[2][0] * b[0][2] + a[2][1] * b[1][2] + a[2][2] * b[2][2]]\n    ];\n\n\treturn final;\n}\nconst screenTransform = getScreenTransformationMatrix( -90 ); // r_s\nconst worldTransform = getWorldTransformationMatrix();\n//////////////////////////////\n  function degToRad(deg){\n    return deg*(Math.PI/180);\n}\n\nfunction radToDeg(rad){\n    return rad*(180/Math.PI);\n}\n\nfunction eulerAngles(heading,attitude,bank){\n\n    //Convert everything to radians\n    heading = degToRad(heading);\n    attitude = degToRad(attitude);\n    bank = degToRad(bank);\n\n    //Cos and sin\n    var ch = Math.cos(heading),\n        sh = Math.sin(heading),\n        ca = Math.cos(attitude),\n        sa = Math.sin(attitude),\n        cb = Math.cos(bank),\n        sb = Math.sin(bank);\n\n    //Create matrix\n    var matrix1 = [\n        [  ch*ca , -ch*sa*cb + sh*sb , ch*sa*sb + sh*cb  ],\n        [   sa   ,       ca*cb       ,      -ca*sb       ],\n        [ -sh*ca , sh*sa*cb + ch*sb  , -sh*sa*sb + ch*cb ]\n    ];\n\n    var matrix2 = matrixMultiply( matrix1, screenTransform ); // R_w\n    var matrix = matrixMultiply( matrix2, worldTransform ); // R_w\n    //console.log(matrix1);\n    //console.log(matrix);\n    //Singularity fix\n    //http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToEuler/index.htm\n    //North pole\n    if( matrix[1][0]>0.998 ){\n        heading = Math.atan2( -matrix[2][0], matrix[0][0] )+ Math.PI;//Math.atan2( matrix[0][2], matrix[2][2] );\n        attitude = Math.asin( matrix[1][0] );//Math.PI/2;\n        bank = 0;//Math.atan2( -matrix[1][2], matrix[1][1] );//0\n        //console.log(\"s1\");\n    //South pole\n    } else if( matrix[1][0]<-0.998 ){\n        heading = Math.atan2( -matrix[2][0], matrix[0][0] )+ Math.PI;//Math.atan2( matrix[0][2], matrix[2][2] );\n        attitude = -Math.PI/2;\n        bank = 0;\n        //console.log(\"s2\");\n    } else {\n        heading = Math.atan2( -matrix[2][0], matrix[0][0] )+ Math.PI;\n        attitude = Math.asin( matrix[1][0] );\n        bank = Math.atan2( -matrix[1][2], matrix[1][1] );\n    }\n\n    //Turn radians back to degrees and return\n    return {\n        \"HEADING\":  radToDeg( heading ),\n        \"ATTITUDE\": radToDeg( attitude ),\n        \"BANK\": radToDeg( bank )\n    };\n}\nfunction getRotationMatrix( alpha, beta, gamma ) {\n\n    var _x = beta  ? beta  * degtorad : 0; // beta value\n    var _y = gamma ? gamma * degtorad : 0; // gamma value\n    var _z = alpha ? alpha * degtorad : 0; // alpha value\n  \n    var cX = Math.cos( _x );\n    var cY = Math.cos( _y );\n    var cZ = Math.cos( _z );\n    var sX = Math.sin( _x );\n    var sY = Math.sin( _y );\n    var sZ = Math.sin( _z );\n  \n    //\n    // ZXY rotation matrix construction.\n    //\n  \n    var m11 = cZ * cY - sZ * sX * sY;\n    var m12 = - cX * sZ;\n    var m13 = cY * sZ * sX + cZ * sY;\n  \n    var m21 = cY * sZ + cZ * sX * sY;\n    var m22 = cZ * cX;\n    var m23 = sZ * sY - cZ * cY * sX;\n  \n    var m31 = - cX * sY;\n    var m32 = sX;\n    var m33 = cX * cY;\n  \n    /*return [\n      m11,    m12,    m13,\n      m21,    m22,    m23,\n      m31,    m32,    m33\n    ];*/\n    const rotMat = new THREE.Matrix4();\n    rotMat.set(\n        m11,    m12,    m13,\n        m21,    m22,    m23,\n        m31,    m32,    m33\n    );\n  return rotMat;\n  };\n\n  function eulerFromRotation(x,y,z){\n    var rot =  getRotationMatrix(x,y,z);\n    const euler = new THREE.Euler();\n    //const rotMat = new THREE.Matrix4();\n    euler.setFromRotationMatrix(rot);\n    return euler;\n  }\n\n\nclass imu {\n    constructor(){\n        this._yaw = 0;\n        this._pitch = 0;\n        this._roll = 0;\n        this._compass = 0;\n        this._updated = false;\n        var that = this;\n        var objOrientation = {\n\t\t\t\"HEADING\": 0,\n\t\t\t\"ATTITUDE\": 0,\n\t\t\t\"BANK\": 0\n\t\t};\n        function handleOrientation(event) {\n            objOrientation = eulerAngles(event.alpha,event.beta,event.gamma);\n            //var eu = eulerFromRotation(event.alpha,event.beta,event.gamma);\n            //that._compass = compassHeading(event.alpha,event.beta,event.gamma);\n            that._yaw =  objOrientation.HEADING; //360- event.alpha;//\n            that._roll = -objOrientation.BANK;  \n            that._pitch = objOrientation.ATTITUDE;\n            that._updated  = true;\n          }\n        window.addEventListener(\"deviceorientation\", handleOrientation, true);\n    }\n    get yaw(){\n        return this._yaw;\n    }\n    get pitch(){\n        return this._pitch;\n    }\n    get roll(){\n        return this._roll;\n    }\n    get compass(){\n        return this._compass;\n    }\n    get updated(){\n        if (this._updated){\n            this._updated = false;\n            return true;\n        } else return false;   \n    }\n}\nexport default {imu}","import * as THREE from 'three';\nimport * as SGRAM from 'stereogram';\nimport IMU from './Imu.js';\nfunction isMobileCheck() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\nclass orientationData {\n    //sinulate on desktop or real IMU on mobile\n    constructor(forceMobile =false){\n        this.isMobile = isMobileCheck() || forceMobile;\n        console.log(this.isMobile);\n        this.flightData = null\n        if(this.isMobile) this.flightData = new IMU.imu();\n        else this.flightData = new SGRAM.airplaneTelemetry();\n    }\n    get yaw(){\n        return this.flightData.yaw;\n    }\n    get pitch(){\n        return this.flightData.pitch;\n    }\n    get roll(){\n        return this.flightData.roll;\n    }\n    next(){\n        if(!this.isMobile) this.flightData.next();\n    }\n}\nexport default function hud(scene,canvas,planeSize = 0.5){\n\n    //var size = 600;\n    //if (window.innerHeight < size) \n    //size = window.innerHeight;\n    const screenDimensions = {\n        width: canvas.width,\n        height: canvas.height\n    }\n    //console.log(screenDimensions);\n    var elapsed, now;\n    var then = 0;\n    var interval=0.05;\n    //console.log('win inner height'+window.innerHeight);\n    var style = `rgba(\n        ${0xa3},\n        ${0xff},\n        ${0x00},\n        ${0xFF}`;\n    var hudCanvas = document.createElement('canvas');\n    hudCanvas.width = screenDimensions.width/2; //keep it square assuming default 300x150\n    hudCanvas.height = screenDimensions.height;\n    var hudBitmap = hudCanvas.getContext('2d');\n    hudBitmap.lineWidth = 2;\n    //flipHoriz(hudBitmap);   \n    hudBitmap.fillStyle = style;\n    hudBitmap.strokeStyle = style;\n    hudBitmap.globalAlpha = 0.75;\n    var hudElements = {\n        info: new SGRAM.hudSimpleText(hudBitmap, hudCanvas.width/2 -30, hudCanvas.height - 5,16),\n        border: new SGRAM.hudBorder(hudBitmap,hudCanvas.width,hudCanvas.height),\n        crosshair: new SGRAM.crosshair(hudBitmap,hudCanvas.width,hudCanvas.height),\n        horizon: new SGRAM.horizon(hudBitmap,hudCanvas.width,hudCanvas.height),\n        compass: new SGRAM.compass(hudBitmap,hudCanvas.width,hudCanvas.height),\n        pitchLader: new SGRAM.pitchLader(hudBitmap,hudCanvas.width,hudCanvas.height),\n        //msgs: new SGRAM.hudWrappedText(hudBitmap,10,60,12)\n    };\n    //hudElements.msgs.txt = 'Smash 11, you have traffic 12 o\\'clock, less than five miles. 727 descending to one four thousand.\\n Copy. Smash is radar contact tally-ho.';\n    //hudElements.border.lineWidth = 5;\n    /*hudElements.crosshair.lineWidth = 2;\n    hudElements.compass.lineWidth = 2;\n    hudElements.pitchLader.lineWidth = 2;*/\n    Object.values(hudElements).forEach(val => {val.draw()});\n \n\n    var hudTexture = new THREE.Texture(hudCanvas);\n    //hudTexture.name = \"hudCanvas\";\n    hudTexture.needsUpdate = true;\n    var material = new THREE.MeshBasicMaterial({map: hudTexture} );//{color: 0xffff00, side: THREE.DoubleSide} );\n    material.transparent = true;\n    var planeGeometry = new THREE.PlaneGeometry( planeSize, planeSize );\n    var plane = new THREE.Mesh( planeGeometry, material );\n    plane.name = \"hudPlane\";\n    plane.position.set(0,0,-0.15);\n    scene.add( plane );\n\n\n    var movePoint = new SGRAM.bouncer(screenDimensions.width,screenDimensions.height);\n    var flightData = new orientationData(false);//new SGRAM.airplaneTelemetry();\n    //var imuData = new IMU.imu();\n\n    function draw() {\n        hudBitmap.clearRect(0,0,screenDimensions.width/2,screenDimensions.height);\n        \n        // display time\n        hudElements.info.text = SGRAM.getTimeString();\n\n        // simulate crosshair movement and display\n        movePoint.nextPoint();\n        hudElements.crosshair.x = movePoint.x;\n        hudElements.crosshair.y = movePoint.y;\n\n        // simulate incomming data\n        flightData.next();\n\n        // simulate compass rotation\n        hudElements.compass.angle = flightData.yaw;\n        hudElements.pitchLader.rot = flightData.roll;\n        hudElements.pitchLader.angle = flightData.pitch;\n        // redraw\n        Object.values(hudElements).forEach(val => {val.draw()});\n\n        hudTexture.needsUpdate = true;\n        //if (imuData.updated) console.log(`compass = ${imuData.compass}, yaw = ${imuData.yaw},pitch = ${imuData.pitch},roll = ${imuData.roll}`);\n      }\n\n\n    function flipHoriz(drawing){\n        drawing.translate(screenDimensions.width/2,0);\n        drawing.scale(-1, 1);\n    }\n\n\tfunction update(time) {\n        //then = now;\n        now = time;\n        elapsed = now - then;\n        if (elapsed > interval){\n            draw();\n            //console.log(time);\n            then = now;\n        }\n    }\n    return {\n        update,\n        draw\n    }\n}","import * as THREE from 'three';\nimport SceneSubject from './SceneSubject';\nimport GeneralLights from './GeneralLights';\nimport { StereoButton } from 'stereogram';\nimport Hud from './Hud';\nexport default function canvas(canvas)  {\n    var preserveSize = true;\n\n    const clock = new THREE.Clock();\n    const origin = new THREE.Vector3(0,0,0);\n\n    const screenDimensions = {\n        width: canvas.width,\n        height: canvas.height\n    }\n    \n    const mousePosition = {\n        x: 0,\n        y: 0\n    }\n\n    const scene = buildScene();\n    const renderer = buildRender(screenDimensions);\n    const camera = buildCamera(screenDimensions);\n    const sceneSubjects = createSceneSubjects(scene);\n    var hud = new Hud(scene,canvas,0.5);\n    scene.add(camera);\n    var viewer = new StereoButton(renderer);\n    viewer.fullSize = true;\n    //viewer.enableStereo();\n    document.body.appendChild( viewer.createButton());\n\n    if (preserveSize){\n        // remember these initial values\n        var tanFOV = Math.tan( ( ( Math.PI / 180 ) * camera.fov / 2 ) );\n        var windowHeight = 150;//window.innerHeight;\n    }\n    window.addEventListener(\"keypress\", onKeyPress);\n\n    function getOffset(){\n        const pxMm = 0.254/454;\n        return (screenDimensions.width -300)*pxMm;\n    }\n    function buildScene() {\n        const scene = new THREE.Scene();\n        scene.background = new THREE.Color('black');\n        return scene;\n    }\n\n    function buildRender({ width, height }) {\n        const renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true, alpha: true }); \n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\n\n        renderer.setPixelRatio(DPR);\n        renderer.setSize(width, height);\n        renderer.autoClear = false;     //needed for canvas2d overlayed\n        renderer.gammaInput = true;\n        renderer.gammaOutput = true; \n        \n        return renderer;\n    }\n\n    function buildCamera({ width, height }) {\n        const aspectRatio = width / height;\n        const fieldOfView = 90;\n        const nearPlane = 0.0001;\n        const farPlane = 20; \n        const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n        camera.focus = 3;\n        camera.position.set(0, 0, 0);\n\n        return camera;\n    }\n\n    function createSceneSubjects(scene) {\n        const sceneSubjects = [\n            new GeneralLights(scene),\n            //new SceneSubject(scene),\n        ];\n        return sceneSubjects;\n    }\n\n\n    function update() {\n        const elapsedTime = clock.getElapsedTime();\n        \n        for(let i=0; i<sceneSubjects.length; i++)\n            sceneSubjects[i].update(elapsedTime);\n        \n        hud.update(elapsedTime);\n        viewer.render(scene, camera);\n    }\n\n    function onKeyPress(ev) {\n        let keycode = ev.which;\n        if (\n          (keycode >= 48 && keycode <= 57) ||\n          (keycode >= 97 && keycode <= 122) ||\n          (keycode >= 65 && keycode <= 90)\n        ) {\n            //if(keycode == 49) {offset= offset +0.1;effect.setOffset(offset);}\n            //if(keycode == 50) {offset = offset -0.1;effect.setOffset(offset);}\n            //if(keycode == 51) {camera.rotateY(Math.PI/360);}\n            //if(keycode == 52) {camera.rotateY(-Math.PI/360);}\n            //console.log( offset);\n            //if(keycode == 51) hud.draw();\n        }\n      }\n\n\n    function updateCameraPositionRelativeToMouse() {\n        camera.position.x += (  (mousePosition.x * 0.1) - camera.position.x ) * 0.1;\n        camera.position.y += ( -(mousePosition.y * 0.1) - camera.position.y ) * 0.1;\n        camera.lookAt(origin );\n    }\n\n    function onWindowResize() {\n        const { width, height } = canvas;\n        \n        screenDimensions.width = width;\n        screenDimensions.height = height;\n\n        camera.aspect = width / height;\n        if (preserveSize){\n            // adjust the FOV\n            camera.fov = ( 360 / Math.PI ) * Math.atan( tanFOV * ( height / windowHeight ) );\n            //viewer.setOffset(getOffset());\n        }\n\n        camera.updateProjectionMatrix();\n        //camera.lookAt( scene.position );  \n        viewer.setSize(width, height);   \n    }\n\n    function animate(){\n        renderer.setAnimationLoop( function () {\n            update();         \n        } );\n\n    }\n\n    function onMouseMove(x, y) {\n        mousePosition.x = x;\n        mousePosition.y = y;\n    }\n    return {\n        update,\n        onWindowResize,\n        onMouseMove,\n        animate\n    }\n}","import SceneManager from './SceneManager';\n\nexport default container => {\n    \n    const canvas = createCanvas(document, container);\n    const sceneManager = new SceneManager(canvas);\n    \n    \n    let canvasHalfWidth;\n    let canvasHalfHeight;\n\n    bindEventListeners();\n    sceneManager.animate();\n    \n    \n    function createCanvas(document, container) {\n        const canvas = document.createElement(\"canvas\");    \n        container.appendChild(canvas);   \n        return canvas;\n    }\n\n    function bindEventListeners() {\n        window.onresize = resizeCanvas;\n        //window.onmousemove = mouseMove;\n        resizeCanvas();\t\n    }\n\n    function resizeCanvas() {        \n        canvas.style.width = '100%';\n        canvas.style.height= '100%';\n        \n        canvas.width  = canvas.offsetWidth;\n        canvas.height = canvas.offsetHeight;\n\n        canvasHalfWidth = Math.round(canvas.offsetWidth/2);\n        canvasHalfHeight = Math.round(canvas.offsetHeight/2);\n\n        sceneManager.onWindowResize();\n        //hudManager.onWindowResize()\n    }\n\n    function mouseMove({screenX, screenY}) {\n        sceneManager.onMouseMove(screenX-canvasHalfWidth, screenY-canvasHalfHeight);\n    }\n\n    //function render(time) {\n        \n     //   sceneManager.update();\n        //hudManager.update();\n    //    requestAnimationFrame(render);\n    //}/\n    //renderer.setAnimationLoop( function () {\n\n        //renderer.render( scene, camera );\n     //   sceneManager.update();\n    //} );\n\n}\n","import React, { Component } from 'react';\n\nimport threeEntryPoint from \"./threejs/threeEntryPoint\"\nimport \"./viewer.css\"\n\nexport default class Viewer extends Component {\n    \n    componentDidMount() {\n        threeEntryPoint(this.threeRootElement);\n    }\n\n    render () {\n        return (\n            <div className=\"viewer-viewer\" ref={element => this.threeRootElement = element} />\n        );\n    }\n}","import './App.css';\nimport Viewer from './Components/Viewer/Viewer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Viewer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}